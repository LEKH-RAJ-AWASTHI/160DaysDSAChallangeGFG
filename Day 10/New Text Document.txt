Day 10:
First Non Repeating character
Given a string s consisting of lowercase Latin Letters. Return the first non-repeating character in s. If there is no non-repeating character, return '$'.
Note: When you return '$' driver code will output -1.

Code:
class Solution {
    // Function to find the first non-repeating character in a string.
    static char nonRepeatingChar(String s) {
        // Your code here
        Map<Character, Integer> charCount = new LinkedHashMap<>();
        for(char c: s.toCharArray())
        {
            charCount.put(c, charCount.getOrDefault(c,0)+ 1);
        }
        for(Map.Entry<Character, Integer> entry: charCount.entrySet())
        {
            if(entry.getValue() ==1 )
            {
                return entry.getKey();
            }
        }
        return '$';
    }
}

Explanation:
Data Structure Used:

A LinkedHashMap is used to maintain the order of characters and their counts as they appear in the string.
Logic:

Loop through the string and populate the LinkedHashMap with character counts.
Iterate through the LinkedHashMap to find the first character with a count of 1.
Output:

The function returns the first non-repeating character if found, or -1 if none exists.